{"ast":null,"code":"// utils/taskUtils.js\n\n// Llaves para localStorage\nconst MEMBERS_KEY = 'familytask_members';\nconst TASKS_KEY = 'familytask_tasks';\n\n// Carga miembros desde localStorage\nexport function loadMembers() {\n  const data = localStorage.getItem(MEMBERS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\n// Guarda miembros en localStorage\nexport function saveMembers(members) {\n  localStorage.setItem(MEMBERS_KEY, JSON.stringify(members));\n}\n\n// Carga tareas desde localStorage\nexport function loadTasks() {\n  const data = localStorage.getItem(TASKS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\n// Guarda tareas en localStorage\nexport function saveTasks(tasks) {\n  localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\n\n// Rota asignación y actualiza la fecha de la tarea completada\nexport function rotateAssignment(tasks, taskId, members) {\n  return tasks.map(task => {\n    if (task.id === taskId) {\n      var _members$nextMemberIn;\n      const today = new Date();\n      const startCountingFrom = new Date(today);\n      startCountingFrom.setDate(today.getDate() + 1); // día siguiente al completado\n\n      const newStartDate = new Date(startCountingFrom);\n      newStartDate.setDate(startCountingFrom.getDate() + Number(task.recurrenceDays) - 1);\n      const currentMemberIndex = members.findIndex(m => m.id === task.assignedTo);\n      const nextMemberIndex = currentMemberIndex === -1 ? 0 : (currentMemberIndex + 1) % members.length;\n      return {\n        ...task,\n        assignedTo: ((_members$nextMemberIn = members[nextMemberIndex]) === null || _members$nextMemberIn === void 0 ? void 0 : _members$nextMemberIn.id) || null,\n        startDate: newStartDate.toISOString().split('T')[0]\n      };\n    }\n    return task;\n  });\n}","map":{"version":3,"names":["MEMBERS_KEY","TASKS_KEY","loadMembers","data","localStorage","getItem","JSON","parse","saveMembers","members","setItem","stringify","loadTasks","saveTasks","tasks","rotateAssignment","taskId","map","task","id","_members$nextMemberIn","today","Date","startCountingFrom","setDate","getDate","newStartDate","Number","recurrenceDays","currentMemberIndex","findIndex","m","assignedTo","nextMemberIndex","length","startDate","toISOString","split"],"sources":["/Users/kushki/Documents/Iniciativas_propias/Home_tasks/src/utils/taskUtils.js"],"sourcesContent":["// utils/taskUtils.js\n\n// Llaves para localStorage\nconst MEMBERS_KEY = 'familytask_members';\nconst TASKS_KEY = 'familytask_tasks';\n\n// Carga miembros desde localStorage\nexport function loadMembers() {\n  const data = localStorage.getItem(MEMBERS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\n// Guarda miembros en localStorage\nexport function saveMembers(members) {\n  localStorage.setItem(MEMBERS_KEY, JSON.stringify(members));\n}\n\n// Carga tareas desde localStorage\nexport function loadTasks() {\n  const data = localStorage.getItem(TASKS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\n// Guarda tareas en localStorage\nexport function saveTasks(tasks) {\n  localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\n\n// Rota asignación y actualiza la fecha de la tarea completada\nexport function rotateAssignment(tasks, taskId, members) {\n  return tasks.map(task => {\n    if (task.id === taskId) {\n      const today = new Date();\n      const startCountingFrom = new Date(today);\n      startCountingFrom.setDate(today.getDate() + 1); // día siguiente al completado\n\n      const newStartDate = new Date(startCountingFrom);\n      newStartDate.setDate(startCountingFrom.getDate() + Number(task.recurrenceDays) - 1);\n\n      const currentMemberIndex = members.findIndex(m => m.id === task.assignedTo);\n      const nextMemberIndex = currentMemberIndex === -1 ? 0 : (currentMemberIndex + 1) % members.length;\n\n      return {\n        ...task,\n        assignedTo: members[nextMemberIndex]?.id || null,\n        startDate: newStartDate.toISOString().split('T')[0],\n      };\n    }\n    return task;\n  });\n}\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,WAAW,GAAG,oBAAoB;AACxC,MAAMC,SAAS,GAAG,kBAAkB;;AAEpC;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC;EAC9C,OAAOG,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,EAAE;AACrC;;AAEA;AACA,OAAO,SAASK,WAAWA,CAACC,OAAO,EAAE;EACnCL,YAAY,CAACM,OAAO,CAACV,WAAW,EAAEM,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC;AAC5D;;AAEA;AACA,OAAO,SAASG,SAASA,CAAA,EAAG;EAC1B,MAAMT,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,SAAS,CAAC;EAC5C,OAAOE,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,EAAE;AACrC;;AAEA;AACA,OAAO,SAASU,SAASA,CAACC,KAAK,EAAE;EAC/BV,YAAY,CAACM,OAAO,CAACT,SAAS,EAAEK,IAAI,CAACK,SAAS,CAACG,KAAK,CAAC,CAAC;AACxD;;AAEA;AACA,OAAO,SAASC,gBAAgBA,CAACD,KAAK,EAAEE,MAAM,EAAEP,OAAO,EAAE;EACvD,OAAOK,KAAK,CAACG,GAAG,CAACC,IAAI,IAAI;IACvB,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,EAAE;MAAA,IAAAI,qBAAA;MACtB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;MACxB,MAAMC,iBAAiB,GAAG,IAAID,IAAI,CAACD,KAAK,CAAC;MACzCE,iBAAiB,CAACC,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEhD,MAAMC,YAAY,GAAG,IAAIJ,IAAI,CAACC,iBAAiB,CAAC;MAChDG,YAAY,CAACF,OAAO,CAACD,iBAAiB,CAACE,OAAO,CAAC,CAAC,GAAGE,MAAM,CAACT,IAAI,CAACU,cAAc,CAAC,GAAG,CAAC,CAAC;MAEnF,MAAMC,kBAAkB,GAAGpB,OAAO,CAACqB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKD,IAAI,CAACc,UAAU,CAAC;MAC3E,MAAMC,eAAe,GAAGJ,kBAAkB,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAACA,kBAAkB,GAAG,CAAC,IAAIpB,OAAO,CAACyB,MAAM;MAEjG,OAAO;QACL,GAAGhB,IAAI;QACPc,UAAU,EAAE,EAAAZ,qBAAA,GAAAX,OAAO,CAACwB,eAAe,CAAC,cAAAb,qBAAA,uBAAxBA,qBAAA,CAA0BD,EAAE,KAAI,IAAI;QAChDgB,SAAS,EAAET,YAAY,CAACU,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACpD,CAAC;IACH;IACA,OAAOnB,IAAI;EACb,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}