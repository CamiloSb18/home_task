{"ast":null,"code":"// utils/taskUtils.js\n\nconst MEMBERS_KEY = 'familytask_members';\nconst TASKS_KEY = 'familytask_tasks';\nexport function loadMembers() {\n  const data = localStorage.getItem(MEMBERS_KEY);\n  return data ? JSON.parse(data) : [];\n}\nexport function saveMembers(members) {\n  localStorage.setItem(MEMBERS_KEY, JSON.stringify(members));\n}\nexport function loadTasks() {\n  const data = localStorage.getItem(TASKS_KEY);\n  return data ? JSON.parse(data) : [];\n}\nexport function saveTasks(tasks) {\n  localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\n\n// Nueva función para parsear fecha local sin problema de timezone\nfunction parseLocalDate(dateString) {\n  const [year, month, day] = dateString.split('-').map(Number);\n  return new Date(year, month - 1, day);\n}\nexport function rotateAssignment(tasks, taskId, members) {\n  return tasks.map(task => {\n    if (task.id === taskId) {\n      var _members$nextMemberIn;\n      const currentStartDate = parseLocalDate(task.startDate);\n      const newStartDate = new Date(currentStartDate);\n      newStartDate.setDate(currentStartDate.getDate() + Number(task.recurrenceDays));\n      const currentMemberIndex = members.findIndex(m => m.id === task.assignedTo);\n      const nextMemberIndex = currentMemberIndex === -1 ? 0 : (currentMemberIndex + 1) % members.length;\n      return {\n        ...task,\n        assignedTo: ((_members$nextMemberIn = members[nextMemberIndex]) === null || _members$nextMemberIn === void 0 ? void 0 : _members$nextMemberIn.id) || null,\n        startDate: newStartDate.toISOString().split('T')[0]\n      };\n    }\n    return task;\n  });\n}","map":{"version":3,"names":["MEMBERS_KEY","TASKS_KEY","loadMembers","data","localStorage","getItem","JSON","parse","saveMembers","members","setItem","stringify","loadTasks","saveTasks","tasks","parseLocalDate","dateString","year","month","day","split","map","Number","Date","rotateAssignment","taskId","task","id","_members$nextMemberIn","currentStartDate","startDate","newStartDate","setDate","getDate","recurrenceDays","currentMemberIndex","findIndex","m","assignedTo","nextMemberIndex","length","toISOString"],"sources":["/Users/kushki/Documents/Iniciativas_propias/Home_tasks/src/utils/taskUtils.js"],"sourcesContent":["// utils/taskUtils.js\n\nconst MEMBERS_KEY = 'familytask_members';\nconst TASKS_KEY = 'familytask_tasks';\n\nexport function loadMembers() {\n  const data = localStorage.getItem(MEMBERS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\nexport function saveMembers(members) {\n  localStorage.setItem(MEMBERS_KEY, JSON.stringify(members));\n}\n\nexport function loadTasks() {\n  const data = localStorage.getItem(TASKS_KEY);\n  return data ? JSON.parse(data) : [];\n}\n\nexport function saveTasks(tasks) {\n  localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\n\n// Nueva función para parsear fecha local sin problema de timezone\nfunction parseLocalDate(dateString) {\n  const [year, month, day] = dateString.split('-').map(Number);\n  return new Date(year, month - 1, day);\n}\n\nexport function rotateAssignment(tasks, taskId, members) {\n  return tasks.map(task => {\n    if (task.id === taskId) {\n      const currentStartDate = parseLocalDate(task.startDate);\n\n      const newStartDate = new Date(currentStartDate);\n      newStartDate.setDate(currentStartDate.getDate() + Number(task.recurrenceDays));\n\n      const currentMemberIndex = members.findIndex(m => m.id === task.assignedTo);\n      const nextMemberIndex = currentMemberIndex === -1 ? 0 : (currentMemberIndex + 1) % members.length;\n\n      return {\n        ...task,\n        assignedTo: members[nextMemberIndex]?.id || null,\n        startDate: newStartDate.toISOString().split('T')[0],\n      };\n    }\n    return task;\n  });\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG,oBAAoB;AACxC,MAAMC,SAAS,GAAG,kBAAkB;AAEpC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC;EAC9C,OAAOG,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,EAAE;AACrC;AAEA,OAAO,SAASK,WAAWA,CAACC,OAAO,EAAE;EACnCL,YAAY,CAACM,OAAO,CAACV,WAAW,EAAEM,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC;AAC5D;AAEA,OAAO,SAASG,SAASA,CAAA,EAAG;EAC1B,MAAMT,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,SAAS,CAAC;EAC5C,OAAOE,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,EAAE;AACrC;AAEA,OAAO,SAASU,SAASA,CAACC,KAAK,EAAE;EAC/BV,YAAY,CAACM,OAAO,CAACT,SAAS,EAAEK,IAAI,CAACK,SAAS,CAACG,KAAK,CAAC,CAAC;AACxD;;AAEA;AACA,SAASC,cAAcA,CAACC,UAAU,EAAE;EAClC,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EAC5D,OAAO,IAAIC,IAAI,CAACN,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC;AACvC;AAEA,OAAO,SAASK,gBAAgBA,CAACV,KAAK,EAAEW,MAAM,EAAEhB,OAAO,EAAE;EACvD,OAAOK,KAAK,CAACO,GAAG,CAACK,IAAI,IAAI;IACvB,IAAIA,IAAI,CAACC,EAAE,KAAKF,MAAM,EAAE;MAAA,IAAAG,qBAAA;MACtB,MAAMC,gBAAgB,GAAGd,cAAc,CAACW,IAAI,CAACI,SAAS,CAAC;MAEvD,MAAMC,YAAY,GAAG,IAAIR,IAAI,CAACM,gBAAgB,CAAC;MAC/CE,YAAY,CAACC,OAAO,CAACH,gBAAgB,CAACI,OAAO,CAAC,CAAC,GAAGX,MAAM,CAACI,IAAI,CAACQ,cAAc,CAAC,CAAC;MAE9E,MAAMC,kBAAkB,GAAG1B,OAAO,CAAC2B,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKD,IAAI,CAACY,UAAU,CAAC;MAC3E,MAAMC,eAAe,GAAGJ,kBAAkB,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAACA,kBAAkB,GAAG,CAAC,IAAI1B,OAAO,CAAC+B,MAAM;MAEjG,OAAO;QACL,GAAGd,IAAI;QACPY,UAAU,EAAE,EAAAV,qBAAA,GAAAnB,OAAO,CAAC8B,eAAe,CAAC,cAAAX,qBAAA,uBAAxBA,qBAAA,CAA0BD,EAAE,KAAI,IAAI;QAChDG,SAAS,EAAEC,YAAY,CAACU,WAAW,CAAC,CAAC,CAACrB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACpD,CAAC;IACH;IACA,OAAOM,IAAI;EACb,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}